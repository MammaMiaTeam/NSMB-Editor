<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFAAAABQCAYAAACOEfKtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        cwAAEnMBjCK5BwAABF1JREFUeF7tnL2O1DAUhecRVloG2q1AQgimAARUI/Eg8ARoS8op6PcRpqKhpUVa
        0dBQpKZAK9FQ0IBWUBLOCdfIO+Mkjh078XCPdJqxY19/in/ieLJQqVSqQL2+eXwEr+ENvIXP4QquW8w0
        5mFeXsNrj6S4/0No8Ao+gxtQb29fq9/fXdYfV8v684Prjb89vlF/f3LV/M2kMy+v4bUsQ8pimSup5rCE
        hp3AvGMu3tw6bhr/6b4b1FCzDJbFMlk265C6TqT6csVGwOxu/6C5IIxpA5N1St3lgWTQDJ53xId7y/rr
        I3djU5p1sm65K8sBiUDZfZq7YApwu2YM1h25kTDnJwTHyaHiwP7lYfquOtSMSSYdTjjzmmwQ0CnczI6u
        4OdkxshYGbOEP60QSDPWzfGuazNjNWOjNCO/UDkXwU2XHWM5ktuM2erSeRfjBh4H5xLhGTN2mWDyQbTh
        uYIq0VkhHho843d3/nZnaWYaoYJtqWNen60xMc3EgoJPOXMdIjxjtk1m53GXOCiQi+SiliqhZhvZVrZZ
        mh8vFFaVsEgey7LYHmc8REEbjg2uivp8+exp/fPlc2daDrNuxuBK67OMh3HPziiAuypBXZeB/778UVO/
        Xr1w5klp1kkxhhCIVlcO38XBxduQJYsNzygnRAPPKBSirA/DZmWS54w0dEvKBc8oB8RdeEYhENl2mZWH
        34Ukzw1JV8Fd5rjTpZQQ2+AZhYzHZDD4LiRxOHhDtK8hKSCmqpMMyIJMBE+/kHkT+7iWE2LqumQs9J+R
        kflijBdAOSDmqIMsyETwdAsZVxw4XQWFOGUDc8Azlsmk/+kEmc7G3m1J0dCc8GjpxmeCqV3IVKV4fztm
        g3PDo6Ubdz/eIQM3S5PtuIzR8Cng0WRCNmQkuPaFxHXoc6+vYwBMBc9Yno/XgmtfSIxevvg4BMTU8Oje
        5QwSt7m2rYYAmQM8Wra52p9KkHjO42Oui1PYB8xc4NFkQ0aCa19IrHICpPsAdSknPFoAts/ESJzknUcI
        xNzwaDMTC659MdF1YQ4PgTgFPOPZAqR9IE4Jj1aAkZ4tQB94RlNC7AWok0i7fSYRXcZ02GcZowvpDgvA
        zoW0Psp12OdRTjcTOuyzmaDbWR322c7SDdUWmxmYjASXW8igW/oOe23pU8ikL5UclvHP66WSvtZ02Pu1
        JoWM+mLdsnRfvxfrFDLr0Q7LcoJ/0NEOPVwkDjpcROECPd4GBx1vo0icA+fQu1APWFoi+ZCx0AUxBzzj
        XYgh8GhZuoQd8aVIHtZD5jFCAfo3h1ihIP2jTYxQmP7VK1YoUP9sGCsUrH93jRUqqPho4wqiZGf5wzWF
        SvQv/7GyIZbcnRm7ufOywTMyEEsdE60xLz88W6hcP7wTKwSin36KFQLSj4+NIQSnn7+LFQKdxQcYCc6M
        dYxJwitHBiTcNCbF++Zdsw7rjisT3K7YCFg/QjuG0DD9DPJYQoO5GNcPcatUqmm0WPwBO59moqdKrycA
        AAAASUVORK5CYII=
</value>
  </data>
</root>